CREATE SCHEMA smdatabase;

/* Table: ENVIRONMENT */
CREATE TABLE ENVIRONMENT
(
   ENVIRONMENT_ID          VARCHAR(6) NOT NULL,
   ENVIRONMENT_NAME        VARCHAR(100) NOT NULL,
   ENVIRONMENT_LOCATION    VARCHAR(100) NOT NULL,
   ENVIRONMENT_CAPACITY    NUMERIC(8,0) NOT NULL,
   ENVIRONMENT_STATUS      NUMERIC(1,0) NOT NULL,
   ENVIRONMENT_TYPE        VARCHAR(50) NOT NULL,
   PRIMARY KEY (ENVIRONMENT_ID)
);

/* Table: COMPETENCE */
CREATE TABLE COMPETENCE
(
   COMPETENCE_ID       NUMERIC(8,0) NOT NULL,
   COMPETENCE_TYPE     VARCHAR(50) NOT NULL,
   COMPETENCE_NAME     VARCHAR(100) NOT NULL,
   COMPETENCE_STATUS   NUMERIC(1,0) NOT NULL,
   PRIMARY KEY (COMPETENCE_ID)
);

/* Table: TEACHER */
CREATE TABLE TEACHER
(
   TEACHER_ID               INT NOT NULL AUTO_INCREMENT,
   TEACHER_FIRSTNAME        VARCHAR(100) NOT NULL,
   TEACHER_LASTNAME         VARCHAR(100) NOT NULL,
   TEACHER_IDTYPE           VARCHAR(30) NOT NULL,
   TEACHER_IDNUMBER         VARCHAR(10) NOT NULL,
   TEACHER_TYPE             VARCHAR(30) NOT NULL,
   TEACHER_CONTRACTTYPE     VARCHAR(30) NOT NULL,
   TEACHER_AREA             VARCHAR(100) NOT NULL,
   TEACHER_STATUS           NUMERIC(1,0),
   PRIMARY KEY (TEACHER_ID)
);

/* Table: SCHEDULE */
CREATE TABLE SCHEDULE
(
   SCHEDULE_ID             INT NOT NULL AUTO_INCREMENT,
   ENVIRONMENT_ID          VARCHAR(6) NOT NULL,
   TEACHER_ID              INT NOT NULL,
   PROGRAM_ID              NUMERIC(8,0) NOT NULL,
   COMPETENCE_ID           NUMERIC(8,0) NOT NULL,
   PERIOD_ID               INT NOT NULL,
   SCHEDULE_DAY            NUMERIC(6,0) NOT NULL,
   SCHEDULE_START_TIME     NUMERIC(8,0) NOT NULL,
   SCHEDULE_DURATION       NUMERIC(8,0) NOT NULL,
   PRIMARY KEY (SCHEDULE_ID,ENVIRONMENT_ID, TEACHER_ID, PERIOD_ID, SCHEDULE_DAY, SCHEDULE_START_TIME)
);

/* Table: ACADEMIC_PERIOD */
CREATE TABLE ACADEMIC_PERIOD
(
   PERIOD_ID           INT NOT NULL AUTO_INCREMENT,
   PERIOD_START_DATE   DATE NOT NULL,
   PERIOD_DURATION     NUMERIC(2,0) NOT NULL,
   PERIOD_NAME         VARCHAR(50) NOT NULL,
   PERIOD_STATUS       NUMERIC(1,0) NOT NULL,
   PRIMARY KEY (PERIOD_ID)
);

/* Table: PROGRAM */
CREATE TABLE PROGRAM
(
   PROGRAM_ID          NUMERIC(8,0) NOT NULL,
   PROGRAM_NAME        VARCHAR(50) NOT NULL,
   PRIMARY KEY (PROGRAM_ID)
);

/* Table: PROGRAM_COMPETENCE */
CREATE TABLE PROGRAM_COMPETENCE
(
   COMPETENCE_ID       NUMERIC(8,0) NOT NULL,
   PROGRAM_ID          NUMERIC(8,0) NOT NULL,
   PRIMARY KEY (COMPETENCE_ID, PROGRAM_ID)
);

/* Table: USER */
CREATE TABLE USER
(
   USER_ID             INT NOT NULL AUTO_INCREMENT,
   TEACHER_ID          INT NOT NULL,
   USER_LOGIN          VARCHAR(100) NOT NULL,
   USER_PASSWORD       VARCHAR(50) NOT NULL,
   USER_TYPE           VARCHAR(50) NOT NULL,
   PRIMARY KEY (USER_ID)
);

ALTER TABLE SCHEDULE ADD CONSTRAINT FK_SCHEDULE_ENVIRONMENT FOREIGN KEY (ENVIRONMENT_ID)
      REFERENCES ENVIRONMENT (ENVIRONMENT_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE SCHEDULE ADD CONSTRAINT FK_SCHEDULE_PROGRAM FOREIGN KEY (PROGRAM_ID)
      REFERENCES PROGRAM (PROGRAM_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE SCHEDULE ADD CONSTRAINT FK_SCHEDULE_TEACHER FOREIGN KEY (TEACHER_ID)
      REFERENCES TEACHER (TEACHER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE SCHEDULE ADD CONSTRAINT FK_SCHEDULE_PERIOD FOREIGN KEY (PERIOD_ID)
      REFERENCES ACADEMIC_PERIOD (PERIOD_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE SCHEDULE ADD CONSTRAINT FK_SCHEDULE_COMPETENCE FOREIGN KEY (COMPETENCE_ID)
      REFERENCES COMPETENCE (COMPETENCE_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE PROGRAM_COMPETENCE ADD CONSTRAINT FK_PROGRAM_COMPETENCE_COMPETENCE FOREIGN KEY (COMPETENCE_ID)
      REFERENCES COMPETENCE (COMPETENCE_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE PROGRAM_COMPETENCE ADD CONSTRAINT FK_PROGRAM_COMPETENCE_PROGRAM FOREIGN KEY (PROGRAM_ID)
      REFERENCES PROGRAM (PROGRAM_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE USER ADD CONSTRAINT FK_USER_TEACHER FOREIGN KEY (TEACHER_ID)
      REFERENCES TEACHER (TEACHER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;